/**
 * sonic-charts.angular.js - D3 charting library made by UserVoice
 * @version v1.0.0
 * @link https://github.com/uservoice/sonic-charts
 * @license MIT
 */
!function(t){angular&&angular.module("sonic",[]).directive("sonicLegend",function(){return{restrict:"E",scope:{data:"="},link:function(t,i){t.$chart=Sonic.Legend(i[0],t.data,{}),t.$watch("data",function(i){return t.$chart.update(i,!0)}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicSeries",function(){return{restrict:"E",scope:{data:"=",width:"=",height:"=",startTime:"=",endTime:"=",dateAxis:"=",dateAxisTicks:"=",axis:"=",yAxis:"=",xAxis:"=",tickFormat:"=",formatValue:"&"},link:function(i,e){function n(){return function(t,e){t!==e&&i.$chart.update(t,!0)}}function r(t){return function(e,n){e!==n&&i.$chart.setOption(t,e,!0)}}var a={width:i.width,height:i.height,startTime:i.startTime,endTime:i.endTime,dateAxis:i.dateAxis||"none",dateAxisTicks:i.dateAxisTicks,axis:i.axis!==t?i.axis:!0,yAxis:i.yAxis,xAxis:i.xAxis,tickFormat:i.tickFormat};i.formatValue&&(a.formatter=function(t){return i.formatValue({value:t})}),i.$chart=Sonic.Series(e[0],i.data,a),i.$watchCollection("data",n()),i.$watch("width",r("width")),i.$watch("height",r("height")),i.$watch("startTime",r("startTime")),i.$watch("endTime",r("endTime")),i.$watch("dateAxis",r("dateAxis")),i.$watch("dateAxisTicks",r("dateAxisTicks")),i.$watch("axis",r("axis")),i.$watch("yAxis",r("yAxis")),i.$watch("xAxis",r("xAxis")),i.$watch("tickFormat",r("tickFormat")),i.$watch("formatValue",function(t,e){t!==e&&i.$chart.setOption("formatter",function(i){return t({value:i})})}),i.$on("$destroy",function(){return i.$chart.destroy()})}}}).directive("sonicSparkline",function(){return{restrict:"E",scope:{data:"=",width:"=",height:"=",color:"@",strokeColor:"@",strokeWidth:"=",yGuide:"=",yGuides:"="},link:function(t,i){t.$chart=Sonic.Sparkline(i[0],t.data,{width:t.width,height:t.height,color:t.color,stroke_color:t.strokeColor,stroke_width:t.strokeWidth,y_guide:t.yGuide,y_guides:t.yGuides}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicPie",function(){return{restrict:"E",scope:{data:"=",size:"="},link:function(t,i){t.$chart=Sonic.Pie(i[0],t.data,{size:t.size}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicDonut",function(){return{restrict:"E",scope:{data:"=",label:"@",labelPosition:"@",value:"=",size:"=",type:"@"},link:function(t,i){t.$chart=Sonic.Donut(i[0],t.data,{type:t.type||!1,label:t.label,label_position:t.labelPosition,value:t.value,size:t.size}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicDonutStack",function(){return{restrict:"E",scope:{data:"=",total:"=",labelSubtext:"@",thickness:"="},link:function(t,i){t.$chart=Sonic.DonutStack(i[0],t.data,{total:t.total,label_subtext:t.labelSubtext,thickness:t.thickness}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicHorizontalBar",function(){return{restrict:"E",scope:{data:"=",percentages:"="},link:function(t,i){t.$chart=Sonic.HorizontalBar(i[0],t.data,{percentages:t.percentages}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicPipeline",function(){return{restrict:"E",scope:{data:"="},link:function(t,i){t.$chart=Sonic.Pipeline(i[0],t.data,{}),t.$on("$destroy",function(){return t.$chart.destroy()})}}})}();