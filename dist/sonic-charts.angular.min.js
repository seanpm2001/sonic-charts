/**
 * sonic-charts.angular.js - D3 charting library made by UserVoice
 * @version v1.0.0
 * @link https://github.com/uservoice/sonic-charts
 * @license MIT
 */
!function(t){angular&&angular.module("sonic",[]).directive("sonicLegend",function(){return{restrict:"E",scope:{data:"="},link:function(t,i){t.$chart=Sonic.Legend(i[0],t.data,{}),t.$watch("data",function(i){return t.$chart.update(i,!0)}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicSeries",function(){return{restrict:"E",scope:{data:"=",width:"=",height:"=",startTime:"=",endTime:"=",dateAxis:"=",dateAxisTicks:"=",axis:"=",yAxis:"=",xAxis:"=",tickFormat:"=",formatValue:"&"},link:function(t,i){function e(){return function(i,e){i!==e&&t.$chart.update(i,!0)}}function n(i){return function(e,n){e!==n&&t.$chart.setOption(i,e,!0)}}var r={width:t.width,height:t.height,startTime:t.startTime,endTime:t.endTime,dateAxis:t.dateAxis||"none",dateAxisTicks:t.dateAxisTicks,axis:"axis"in t?t.axis:!0,yAxis:t.yAxis,xAxis:t.xAxis,tickFormat:t.tickFormat};t.formatValue&&(r.formatter=function(i){return t.formatValue({value:i})}),t.$chart=Sonic.Series(i[0],t.data,r),t.$watchCollection("data",e()),t.$watch("width",n("width")),t.$watch("height",n("height")),t.$watch("startTime",n("startTime")),t.$watch("endTime",n("endTime")),t.$watch("dateAxis",n("dateAxis")),t.$watch("dateAxisTicks",n("dateAxisTicks")),t.$watch("axis",n("axis")),t.$watch("yAxis",n("yAxis")),t.$watch("xAxis",n("xAxis")),t.$watch("tickFormat",n("tickFormat")),t.$watch("formatValue",function(i,e){i!==e&&t.$chart.setOption("formatter",function(t){return i({value:t})})}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicSparkline",function(){return{restrict:"E",scope:{data:"=",width:"=",height:"=",color:"@",strokeColor:"@",strokeWidth:"=",yGuide:"=",yGuides:"="},link:function(t,i){t.$chart=Sonic.Sparkline(i[0],t.data,{width:t.width,height:t.height,color:t.color,stroke_color:t.strokeColor,stroke_width:t.strokeWidth,y_guide:t.yGuide,y_guides:t.yGuides}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicPie",function(){return{restrict:"E",scope:{data:"=",size:"="},link:function(t,i){t.$chart=Sonic.Pie(i[0],t.data,{size:t.size}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicDonut",function(){return{restrict:"E",scope:{data:"=",label:"@",labelPosition:"@",value:"=",size:"=",type:"@"},link:function(t,i){t.$chart=Sonic.Donut(i[0],t.data,{type:t.type||!1,label:t.label,label_position:t.labelPosition,value:t.value,size:t.size}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicDonutStack",function(){return{restrict:"E",scope:{data:"=",total:"=",labelSubtext:"@",thickness:"="},link:function(t,i){t.$chart=Sonic.DonutStack(i[0],t.data,{total:t.total,label_subtext:t.labelSubtext,thickness:t.thickness}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicHorizontalBar",function(){return{restrict:"E",scope:{data:"=",percentages:"="},link:function(t,i){t.$chart=Sonic.HorizontalBar(i[0],t.data,{percentages:t.percentages}),t.$on("$destroy",function(){return t.$chart.destroy()})}}}).directive("sonicPipeline",function(){return{restrict:"E",scope:{data:"="},link:function(t,i){t.$chart=Sonic.Pipeline(i[0],t.data,{}),t.$on("$destroy",function(){return t.$chart.destroy()})}}})}();